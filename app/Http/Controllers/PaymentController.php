<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;

class PaymentController extends Controller
{
    public function pay()
    {
        $orderId = rand(3954001, 3955000); // –¢–µ—Å—Ç–æ–≤—ã–π OrderID
        $amount = 10; // 10 AMD

        $response = Http::post(env('AMERIA_INIT_URL'), [
            'ClientID' => env('AMERIA_CLIENT_ID'),
            'Username' => env('AMERIA_USERNAME'),
            'Password' => env('AMERIA_PASSWORD'),
            'OrderID' => $orderId,
            'Amount' => $amount,
            'Currency' => '051',
            'Description' => 'Test Payment Order #' . $orderId,
            'BackURL' => env('AMERIA_BACK_URL'),
        ]);

        $paymentId = $data['PaymentID'] ?? $data['MDOrderID'] ?? null;

        $data = $response->json();

        if ($data['ResponseCode'] == 1 || $data['ResponseCode'] == "00") {
            return redirect()->to(env('AMERIA_GATEWAY_URL') . "?id=" . $data['PaymentID'] . "&lang=am");
        } else {
            return "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã: " . $data['ResponseMessage'];
        }
    }

    public function callback(Request $request)
    {
        $paymentId = $request->input('paymentID');

        $response = Http::post(env('AMERIA_DETAILS_URL'), [
            'PaymentID' => $paymentId,
            'Username' => env('AMERIA_USERNAME'),
            'Password' => env('AMERIA_PASSWORD'),
        ]);

        $data = $response->json();

        if ($data['ResponseCode'] === '00' && $data['PaymentState'] === 'payment_deposited') {
            return view('payment.success', compact('data'));
        } else {
            return view('payment.failed', compact('data'));
        }
    }
public function cancel(string $paymentId)
    {
        // ’Ü’°’≠ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ PaymentID-’´ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä’®
        $details = $this->getPaymentDetails($paymentId);

        if (isset($details['ResponseCode']) && $details['ResponseCode'] === '00') {
            if (isset($details['PaymentStatus']) && $details['PaymentStatus'] === 'Completed') {
                // ’é’≥’°÷Ä’∏÷Ç’¥’® ’Ø’°÷Ä’∏’≤ ’ß ’π’•’≤’°÷Ä’Ø’æ’•’¨, ’Ø’°’ø’°÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’π’•’≤’°÷Ä’Ø’¥’°’∂ ’∞’°÷Ä÷Å’∏÷Ç’¥
                return $this->sendCancelRequest($paymentId);
            } else {
                return "’é’≥’°÷Ä’∏÷Ç’¥’® ’π’´ ’Ø’°÷Ä’•’¨’´ ’π’•’≤’°÷Ä’Ø’•’¨ (’π’´ ’∞’°’¥’°’∫’°’ø’°’Ω’≠’°’∂’∏÷Ç’¥ ’Ø’°÷Ä’£’°’æ’´’≥’°’Ø’®):";
            }
        } else {
            return "PaymentID ’£’∏’µ’∏÷Ç’©’µ’∏÷Ç’∂ ’π’∏÷Ç’∂’´ ’Ø’°’¥ ’Ω’≠’°’¨ ’ß÷â";
        }
    }
private function sendCancelRequest(string $paymentId)
    {
        $response = Http::post('https://servicestest.ameriabank.am/VPOS/api/VPOS/CancelPayment', [
            'PaymentID' => $paymentId,
            'Username' => env('AMERIA_USERNAME'),
            'Password' => env('AMERIA_PASSWORD'),
        ]);

        $data = $response->json();

        if (isset($data['ResponseCode']) && $data['ResponseCode'] === '00') {
            return "‚ùå ’é’≥’°÷Ä’∏÷Ç’¥’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’π’•’≤’°÷Ä’Ø’æ’•÷Å÷â";
        }

        return "’â’•’≤’°÷Ä’Ø’¥’°’∂ ’Ω’≠’°’¨: " . ($data['ResponseMessage'] ?? '’â’´ ’∞’°’ª’∏’≤’æ’•÷Å ’Ω’ø’°’∂’°’¨ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•÷Ä÷â');
    }
public function getPaymentDetails(string $paymentId)
{
    $response = Http::post('https://servicestest.ameriabank.am/VPOS/api/VPOS/GetPaymentDetails', [
        'PaymentID' => $paymentId,
        'Username' => env('AMERIA_USERNAME'),
        'Password' => env('AMERIA_PASSWORD'),
    ]);

    if ($response->failed()) {
        return ['error' => '’ç’•÷Ä’æ’•÷Ä’´ ’∞’•’ø ’≠’∂’§’´÷Ä ’ß: ' . $response->body()];
    }

    $data = $response->json();

    return $data;
}



public function refund($paymentId)
{
    $response = Http::post('https://servicestest.ameriabank.am/VPOS/api/VPOS/RefundPayment', [
        'PaymentID' => $paymentId,
        'Username' => env('AMERIA_USERNAME'),
        'Password' => env('AMERIA_PASSWORD'),
        'Amount'   => 10, // –≤–æ–∑–≤—Ä–∞—Ç 10 AMD
    ]);

    $data = $response->json();

    if ($data['ResponseCode'] === '00') {
        return "üí∏ –í–æ–∑–≤—Ä–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω. Message: " . $data['ResponseMessage'];
    }

    return "–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: " . $data['ResponseMessage'] ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
}
}
